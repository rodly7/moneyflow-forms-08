
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://msasycggbiwyxlczknwj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1zYXN5Y2dnYml3eXhsY3prbndqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzczNjU5MTMsImV4cCI6MjA1Mjk0MTkxM30.Ezb5GjSg8ApUWR5iNMvVS9bSA7oxudUuYOP2g2ugB_4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Utility functions that were previously in this file

export const formatCurrency = (amount: number, currency: string = 'XAF'): string => {
  if (isNaN(amount)) return '0 ' + currency;
  
  return new Intl.NumberFormat('fr-FR', {
    style: 'decimal',
    minimumFractionDigits: 0,
    maximumFractionDigits: 0,
  }).format(amount) + ' ' + currency;
};

export const getCurrencyForCountry = (country: string): string => {
  const currencyMap: Record<string, string> = {
    'Cameroun': 'XAF',
    'Congo Brazzaville': 'XAF',
    'Gabon': 'XAF',
    'Guinée Équatoriale': 'XAF',
    'République centrafricaine': 'XAF',
    'Tchad': 'XAF',
    'France': 'EUR',
    'Canada': 'CAD',
    'États-Unis': 'USD',
    'Royaume-Uni': 'GBP',
    'Suisse': 'CHF',
  };
  
  return currencyMap[country] || 'XAF';
};

export const convertCurrency = (amount: number, fromCurrency: string, toCurrency: string): number => {
  // Exchange rates (approximations)
  const rates: Record<string, number> = {
    'XAF': 1,
    'EUR': 655.957,
    'USD': 600,
    'GBP': 750,
    'CAD': 450,
    'CHF': 650,
  };
  
  const fromRate = rates[fromCurrency] || 1;
  const toRate = rates[toCurrency] || 1;
  
  // Convert to XAF first, then to target currency
  const amountInXAF = amount * fromRate;
  return amountInXAF / toRate;
};

export const calculateFee = (
  amount: number,
  senderCountry: string,
  recipientCountry: string,
  userType: 'user' | 'agent' | 'admin' | 'sub_admin' = 'user'
): {
  fee: number;
  rate: number;
  agentCommission: number;
  moneyFlowCommission: number;
} => {
  let baseRate = 0.05; // 5% par défaut
  
  // Tarification selon le type d'utilisateur
  if (userType === 'agent') {
    baseRate = 0.025; // 2.5% pour les agents
  } else if (userType === 'admin') {
    baseRate = 0.01; // 1% pour les admins
  } else if (userType === 'sub_admin') {
    baseRate = 0.015; // 1.5% pour les sous-admins
  }
  
  // Tarification selon la destination
  const isInternational = senderCountry !== recipientCountry;
  
  if (isInternational) {
    baseRate += 0.02; // +2% pour international
  }
  
  // Calcul des frais
  const fee = Math.max(amount * baseRate, 100); // Minimum 100 FCFA
  
  // Répartition des commissions
  const agentCommission = fee * 0.4; // 40% pour l'agent
  const moneyFlowCommission = fee * 0.6; // 60% pour MoneyFlow
  
  return {
    fee,
    rate: baseRate * 100, // Convertir en pourcentage
    agentCommission,
    moneyFlowCommission,
  };
};
